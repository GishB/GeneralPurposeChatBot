http {
    # Увеличиваем размер хеш-таблицы для токенов
    map_hash_bucket_size 128;
    map_hash_max_size 4096;

    # Зона для ограничения запросов (3 запроса в секунду)
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=3r/s;

    # Зона для бана IP (храним заблокированные IP)
    limit_req_zone $binary_remote_addr zone=auth_banned:10m rate=1r/m;

    # Загрузка списка валидных токенов
    map $http_x_api_token $is_valid_token {
        default 0;
        include /etc/nginx/tokens/valid_tokens.map;
    }

    # Карта для бана IP
    map $limit_req_status $is_banned {
        default 0;
        "REJECT" 1;
    }
}

server {
    listen 443 ssl;
    server_name localhost;

    # SSL-конфигурация
    ssl_certificate /etc/nginx/ssl/self-signed.crt;
    ssl_certificate_key /etc/nginx/ssl/self-signed.key;
    ssl_protocols TLSv1.2 TLSv1.3;

    # Базовые настройки безопасности
    server_tokens off;
    proxy_hide_header X-Powered-By;

    # Глобальное ограничение запросов
    limit_req zone=auth_limit burst=10 nodelay;
    limit_req zone=auth_banned burst=1 nodelay;

    # Бан IP при превышении лимита (на 5 минут)
    if ($is_banned) {
        return 444; # Закрывает соединение без ответа
    }

    # Проверка токена
    if ($is_valid_token = 0) {
        return 403 "Access denied: Invalid or missing API token";
    }

    # Общие настройки прокси
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # Локации с индивидуальными настройками
    location /health {
        proxy_pass http://chatbot:8000;
    }

    location /chat {
        proxy_pass http://chatbot:8000;
    }

    location /threadpool-stats {
        proxy_pass http://chatbot:8000;
    }

    location /chroma {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass http://chromadb:8000;
    }

    location /redis {
        proxy_pass http://redis:6379;
    }

    # Логирование попыток подбора
    access_log /var/log/nginx/access.log combined;
    error_log /var/log/nginx/error.log warn;
}