Описание:
Запускаем чат-бота на yandex cloud. Инструкция актуальна на 25 июля 2022 г. - в случае вопросов данной инструкции писать SamofalovWORK@yandex.ru
____________________________________________
Пример бота на python 3.9:
>
https://github.com/otter18/serverless-tg-bot

После создания чат-бота в телеграмме запиши его id: (код без этого не работает!)
> 
5234521564:AAGzcwiOmWAuWC7fqAUmKLVRt-Tm-TZvxmR (Этот id использователья нельзя! Он уникален для каждого бота!)
______________________________________
(не обязательный пункт*)
Создаем сервисный аккаунт:
Название: nefteznaykagazprom (Это название использова нельзя! Оно уникально для каждого проекта на yandexcloud)
id: ajejtcq6hse1qh0cfd62
настройки: 
serverless.functions.invoker
editor
_______________________________________
(код должен быть написан правильно! - обязательно), (публичная функция нам не нужна!*)
Создаем serverless function: (то место где написан наш код)
не забывай про index.handler (handler - это функция стартовая, которая должна быть вызвана автоматически через API)**
Название: nefteznayka-main-function (Это название использова нельзя! Оно уникально для каждого проекта на yandexcloud)
id: d2ed52r7qekop064c9ur
ссылка: https://functions.yandexcloud.net/d2ed52r7qekop064c9ur
_______________________________________
(не обязательный пункт)
Создаем bucket: 
Название: files-for-nefteznayka (Это название использова нельзя! Оно уникально для каждого проекта на yandexcloud)
ссылка на image: https://storage.yandexcloud.net/files-for-nefteznayka/Nefteznayka.png
(ссылка временная на 1 час - 22 июля)
_______________________________________
(обязательно привязка к API!)
Создаем API:
1. Не забывай про название server function и id! >> nefteznayka-main-function
2. Если нужен доступ к хранилищу, то напиши название файлов (как я понимаю сервисный аккаунт не нужен при работе с закрытыми данными)
Название:
Ссылка API: https://w9drc425y7l25fcfde5s.apigw.yandexcloud.net
Название: api-nefteznayka
id api: w9drc425y7l25fcfde5s
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>next>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Инструкция по активации бота через программную строку виндовс >> cmd (пиши в локальном поисковике своей винды:
Для cmd: 
ссылка должна быть вида: https://w9drc425y7l25fcfde5s.apigw.yandexcloud.net/nefteznayka-main-function
чат-бот id: 5234521564:AAGzcwiOmWAuWC7fqAUmKLVRt-Tm-TZvxmR
1. Сделаем нормальную ссылку для обращения к API
https://<ссылка url из созданного IP (смотри код)> + </название функции обрабатываемой>
>> 
https://w9drc425y7l25fcfde5s.apigw.yandexcloud.net/nefteznayka-main-function
Вспомним уникальный ID нашего бота в телеграмме
>> 
5234521564:AAGzcwiOmWAuWC7fqAUmKLVRt-Tm-TZvxmR
2. Запустим cmd и напишим следующий код:
>>
curl --request POST --url https://api.telegram.org/bot5234521564:AAGzcwiOmWAuWC7fqAUmKLVRt-Tm-TZvxmR/setWebhook --header "content-type: application/json" --data "{\"url\": \"https://w9drc425y7l25fcfde5s.apigw.yandexcloud.net/nefteznayka-main-function\"}"
3. Проверяем РАБОТУ БОТА В ТЕЛЕГРАММЕ! 
>>
/start
Если работает, то поздравляю)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>возможные ошибки>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
_____________________________________________________________________________________________________
Возможные ошибки с активацикей бота в cmd (при условии что предыдущие шаги выполненны верно):
1. Неправильное экранирование функции (будет писать что setWebhook удален и\или доплнительно ошибку в строке под номер 50-60)
решение: https://stackoverflow.com/questions/54272167/curl-3-unmatched-brace-in-url-position-1
___________________________________________________________________________________________________
*требует проверки
**точка вызова handler может иметь любое название! take или something или aleksandr и так далее. Более того разделение точкой
предпологает что перед точкой вы пишите название файла <файл>.py а после вы пишите название функции в теле кода, которая начинает
работать с вашим кодом!
p.s.
requirements.txt - необходимо перечислить библиотеки необходимые для работы вашей функции!
Пример кода: https://github.com/otter18/serverless-tg-bot/blob/main/source.zip
Пример работы с python yandex cloud: https://cloud.yandex.ru/docs/functions/lang/python/dependencies


                                №2
__________________________________________________________________________
#Работа с БД на serverless yandex (2 часть в процессе 1 августа 2022)
Описание: 
1) необходимо вести запись логов сообщений к боту; 
2) необходимо получить доступ к словарю по запросу пользователя;
# https://cloud.yandex.ru/docs/functions/operations/trigger/os-trigger-create

*в процессе