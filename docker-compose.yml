version: '3.8'

services:
  # Основные сервисы (теперь без публикации портов на хосте)
  chatbot:
    image: gishb/union-chatbot:v0.2.2
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G
    volumes:
      - ./prompts:/app/prompts
    expose:
      - "8000"  # Только для внутренней сети
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
    env_file:
      - .env.prod
    networks:
      - app-network

  redis:
    image: redis:latest
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G
    expose:
      - "6379"
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  chromadb:
    image: chromadb/chroma:latest
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G
    expose:
      - "8000"
    ports:
      - "127.0.0.1:8000:8000"
    volumes:
      - chroma_data:/data
    networks:
      - app-network

  # NGINX с проверкой токена
  nginx:
    image: nginx:1.23-alpine
    deploy:
      resources:
        limits:
          cpus: '1.0'    # Максимум 1 ядро
          memory: '512M'  # Жёсткий лимит памяти
        reservations:
          cpus: '0.2'     # Гарантированные 20% CPU
          memory: '256M'  # Минимум памяти
    ports:
      - "443:443"  # HTTPS
      - "80:80"
    volumes:
      # Основные конфиги
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf  # Главный конфиг
      - ./nginx/conf.d:/etc/nginx/conf.d          # Доп. конфиги (app.conf)

      # SSL и токены
      - ./nginx/ssl:/etc/nginx/ssl                # Сертификаты
      - ./nginx/tokens:/etc/nginx/tokens          # Файлы с токенами

      # Логи
      - ./nginx/logs:/var/log/nginx               # Логи access/error

    depends_on:
      - chatbot
      - redis
      - chromadb
    networks:
      - app-network

  postgres_test:
    image: postgres:15-alpine
    container_name: postgres_test
    environment:
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_DB: test_db
    expose:
      - "5432"
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - pg_test_data:/var/lib/postgresql/data

volumes:
  redis_data:
  chroma_data:
  pg_test_data:


networks:
  app-network:
    driver: bridge